{"ts":1360001092383,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"views = {\n\tartist: {\n\t\tload: function(artist) {\n\t\t\t$.ajax({\n\t\t\t\turl: \"/api/artist/\" + artist,\n\t\t\t\tdataType: \"html\",\n\t\t\t\tsuccess: function(data) {\n\t\t\t\t\t/*\n\t\t\t\t\t\tDefine view\n\t\t\t\t\t*/\n\t\t\t\t\tvar view = $(\"#view\");\n\t\t\t\t\t/*\n\t\t\t\t\t\tAdd data to the view\n\t\t\t\t\t*/\n\t\t\t\t\tview.html(data);\n\t\t\t\t\t/*\n\t\t\t\t\t\tHide the loading icon\n\t\t\t\t\t*/\n\t\t\t\t\tviews.loadingindicator.hide()\n\t\t\t\t\t/*\n\t\t\t\t\t\tComplete the album list\n\t\t\t\t\t\tPass in the album list div!\n\t\t\t\t\t\t<div class=\"album-list\"></div>\n\t\t\t\t\t*/\n\t\t\t\t\tvar albumlist = view.find(\".artist-container .album-list\")\n\t\t\t\t\talbum.list.complete(albumlist, artist);\n\n\t\t\t\t},\n\t\t\t\terror: function() {\n\t\t\t\t\terrors.draw(404);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\tcharts: {\n\t\tload: function() {\n\t\t\t$.ajax({\n\t\t\t\turl: \"/api/charts\",\n\t\t\t\tdataType: \"html\",\n\t\t\t\tsuccess: function(data) {\n\t\t\t\t\tvar view = $(\"#view\");\n\t\t\t\t\tview.html(data);\n\t\t\t\t\tviews.loadingindicator.hide();\n\t\t\t\t\ttracklist.complete($(\"#view .album-tracks\"));\n\t\t\t\t},\n\t\t\t\terror: function() {\n\t\t\t\t\terrors.draw(404)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\talbum: {\n\t\tload: function(id) {\n\t\t\t$.ajax({\n\t\t\t\turl: \"/api/album/\" + id,\n\t\t\t\tdataType: \"html\",\n\t\t\t\tsuccess: function(data) {\n\t\t\t\t\tvar view = $(\"#view\");\n\t\t\t\t\tview.html(data);\n\t\t\t\t\tviews.loadingindicator.hide();\n\t\t\t\t\ttracklist.complete($(\"#view .album-tracks\"));\n\t\t\t\t},\n\t\t\t\terror: function() {\n\t\t\t\t\terrors.draw(404);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\tabout: {\n\t\tload: function() {\n\t\t\t$.ajax({\n\t\t\t\turl: \"/api/about\",\n\t\t\t\tdataType: \"html\",\n\t\t\t\tsuccess: function(data) {\n\t\t\t\t\tvar view = $(\"#view\");\n\t\t\t\t\tview.html(data);\n\t\t\t\t\tviews.loadingindicator.hide();\n\t\t\t\t},\n\t\t\t\terror: function() {\n\t\t\t\t\terrors.draw(404);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\tloadingindicator: {\n\t\thide: function() {\n\t\t\tvar indicator = $(\".loading-indicator\").remove()\n\t\t}\n\t}\n}\nalbum = {\n\tlist: {\n\t\tcomplete: function(albumlist, artist) {\n\t\t\t/*\n\t\t\t\tThe link to compare (iTunes) is in the DOM node of the album list\n\t\t\t*/\n\t\t\tvar resource = $(albumlist).attr(\"data-resource\")\n\t\t\t/*\n\t\t\t\tMake a request to the iTunes server to compare albums.\n\t\t\t*/\n\t\t\t$.ajax({\n\t\t\t\turl: resource,\n\t\t\t\tdataType: \"jsonp\",\n\t\t\t\tdata: {\"callback\": \"?\"},\n\t\t\t\tsuccess: function(json) {\n\t\t\t\t\t/*\n\t\t\t\t\t\tMap to results \n\t\t\t\t\t*/\n\t\t\t\t\tvar results = json.results\n\t\t\t\t\t/*\n\t\t\t\t\t\tRemove first entry which is not an album, but artist info\n\t\t\t\t\t\tFirst result should confirm the artist data we have\n\t\t\t\t\t\tChecking that...\n\t\t\t\t\t*/\n\t\t\t\t\tvar artistdata = (results.splice(0,1))[0];\n\t\t\t\t\tif (artistdata.wrapperType == \"artist\") {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tDefine albums\n\t\t\t\t\t\t\tCreate array of albums that are already there\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tvar albums \t\t\t\t\t= results,\n\t\t\t\t\t\t\talbumsalreadythere \t\t= [],\n\t\t\t\t\t\t\talbumsalreadytherenames = [];\n\t\t\t\t\t\t$.each($('.artist-container .album-list .album'), function(k,v) {\n\t\t\t\t\t\t\talbumsalreadythere.push($(v).data('id'));\n\t\t\t\t\t\t\tvar name \t\t= $(v).data('name'),\n\t\t\t\t\t\t\t\tshortened\t= helpers.slugify(name.substr(0, (name.indexOf(\"(\") == -1) ? name.length : name.indexOf(\"(\")));\n\t\t\t\t\t\t\talbumsalreadytherenames.push(shortened);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tFilter albums that are already there\n\t\t\t\t\t\t\tAnd albums that are not from this artist.\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tvar toadd = _.filter(albums, function(album) {\n\t\t\t\t\t\t\tvar name  \t\t= album.collectionName.substr(0, (album.collectionName.indexOf(\"(\") == -1) ? album.collectionName.length : album.collectionName.indexOf(\"(\"));\n\t\t\t\t\t\t\tvar included = _.contains(albumsalreadytherenames, helpers.slugify(name));\n\t\t\t\t\t\t\treturn (_.contains(albumsalreadythere, album.collectionId) == false) && album.artistId == artist && !included;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tWhen no albums need to be added, end it!\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tif (toadd.length == 0) {\n\t\t\t\t\t\t\t$(\".album-refresh-message\").remove();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tSort albums after release year.\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tvar sortedAlbums = _.sortBy(toadd, function(album) {\n\t\t\t\t\t\t\treturn helpers.parseyear(album.releaseDate);\n\t\t\t\t\t\t}).reverse()\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tLoop through toadds, check if the template is available, add to DOM.\n\t\t\t\t\t\t\tThe whole thing is async, so no $.each loop possible\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tvar divs = [];\n\t\t\t\t\t\tfunction buildAlbum() {\n\t\t\t\t\t\t\tvar album = sortedAlbums[i];\n\t\t\t\t\t\t\ttemplates.buildElement({\n\t\t\t\t\t\t\t\ttemplate:   \"album\",\n\t\t\t\t\t\t\t\tparameters: {album: {\n\t\t\t\t\t\t\t\t\ttracks: album.trackCount,\n\t\t\t\t\t\t\t\t \tname: album.collectionName, \n\t\t\t\t\t\t\t\t \t/*\n\t\t\t\t\t\t\t\t\t\tYear is the first 4 numbers form the release date.\n\t\t\t\t\t\t\t\t \t*/\n\t\t\t\t\t\t\t\t \trelease: helpers.parseyear(album.releaseDate), \n\t\t\t\t\t\t\t\t \timage: album.artworkUrl100,\n\t\t\t\t\t\t\t\t \tartist: album.artistName, \n\t\t\t\t\t\t\t\t \tartistid: album.artistId,\n\t\t\t\t\t\t\t\t \tid: album.collectionId,\n\t\t\t\t\t\t\t\t \texplicit: album.collectionExplicitness == \"explicit\" ? true : false\n\t\t\t\t\t\t\t\t }},\n\t\t\t\t\t\t\t\tcallback: function(output) {\n\t\t\t\t\t\t\t\t\tdivs.push(output);\n\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t\tStart the next iteration, if the album length isn't already reached.\n\t\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\tif (i < albums) {\n\t\t\t\t\t\t\t\t\t\tbuildAlbum()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tonAlbumsFinishedLoading()\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tLoop variables and initial loop\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tvar i         = 0,\n\t\t\t\t\t\t\talbums = sortedAlbums.length;\n\n\t\t\t\t\t\tbuildAlbum()\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tNow we have a sorted array of all the albums.\n\t\t\t\t\t\t\tAdd those div's to the DOM!\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tfunction onAlbumsFinishedLoading() {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\tRefresh is done. At this point, albums will be added.\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tvar albumlist = $(\".album-list\");\n\t\t\t\t\t\t\t$.each(divs, function (key, div) {\n\t\t\t\t\t\t\t\talbumlist.append(div);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\talbum.tracklist.complete(albumlist);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\ttracklist: {\n\t\tcomplete: function(albumlist) {\n\t\t\tvar albums \t   = $(albumlist).find(\".album[data-fetch]\"),\n\t\t\t\talbumcount = albums.length,\n\t\t\t\tk          = 0\n\t\t\t/*\n\t\t\t\tLoop through each album and load tracks.\n\t\t\t*/\n\t\t\tfunction loadTracks() {\n\t\t\t\tvar album = albums[k],\n\t\t\t\t\tresource = $(album).attr(\"data-resource\");\n\t\t\t\t/*\n\t\t\t\t\tMake a request to iTunes.\n\t\t\t\t*/\n\t\t\t\t$.ajax({\n\t\t\t\t\tdataType: \"jsonp\",\n\t\t\t\t\tdata: {callback: \"?\"},\n\t\t\t\t\turl: resource,\n\t\t\t\t\tsuccess: function(data) {\n\t\t\t\t\t\tvar results = data.results;\n\t\t\t\t\t\tif (results != undefined && results.length > 1) {\n\t\t\t\t\t\t\tvar albuminfo = results.splice(0,1),\n\t\t\t\t\t\t\t\tdisccount = results[0].discCount;\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\tCreate object for every disc.\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tvar tracks = []\n\t\t\t\t\t\t\tfor (i=0; i<disccount; i++) {\n\t\t\t\t\t\t\t\ttracks[i] = []\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\tPush songs into structure.\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t$.each(results, function(number, track) {\n\t\t\t\t\t\t\t\tremap = {\n\t\t\t\t\t\t\t\t\tname: track.trackName,\n\t\t\t\t\t\t\t\t\tduration: track.trackTimeMillis,\n\t\t\t\t\t\t\t\t\talbum: track.collectionName,\n\t\t\t\t\t\t\t\t\talbumid: track.collectionId,\n\t\t\t\t\t\t\t\t\tartistid: track.artistId,\n\t\t\t\t\t\t\t\t\tartist: track.artistName,\n\t\t\t\t\t\t\t\t\timage: track.artworkUrl100,\n\t\t\t\t\t\t\t\t\tid: track.trackId,\n\t\t\t\t\t\t\t\t\texplicit: track.trackExplicitness == \"explicit\" ? true : false,\n\t\t\t\t\t\t\t\t\tgenre: track.primaryGenreName,\n\t\t\t\t\t\t\t\t\tnumberinalbum: track.trackNumber,\n\t\t\t\t\t\t\t\t\tcdinalbum: track.discNumber,\n\t\t\t\t\t\t\t\t\ttracks: track.trackCount,\n\t\t\t\t\t\t\t\t\tcdcount: track.discCount,\n\t\t\t\t\t\t\t\t\tpreview: track.previewUrl,\n\t\t\t\t\t\t\t\t\trelease: track.releaseDate\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttracks[track.discNumber-1].push(remap)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\ttemplates.buildElement({\n\t\t\t\t\t\t\t\ttemplate: \"tracklist\",\n\t\t\t\t\t\t\t\tparameters: {album: {cds: tracks}},\n\t\t\t\t\t\t\t\tcallback: function(element) {\n\t\t\t\t\t\t\t\t\tconsole.log($(album))\n\t\t\t\t\t\t\t\t\t$(album).find(\".album-tracks\").replaceWith(element)\n\t\t\t\t\t\t\t\t\trecognition.recognizeAlbum(album)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tNext loop\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tk++;\n\t\t\t\t\t\tif (k < albumcount) {\n\t\t\t\t\t\t\tloadTracks()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tloadTracks()\n\t\t}\n\t}\n}\ntracklist = {\n\tcomplete: function(list) {\n\t\trecognition.recognizeTrackList(list);\n\t}\n}"]],"start1":0,"start2":0,"length1":0,"length2":7677}]],"length":7677}
{"contributors":[],"silentsave":false,"ts":1360001473610,"patch":[[{"diffs":[[0,".results"],[-1,""],[0,""],[1,";"],[0,"\n\t\t\t\t\t/*"]],"start1":2142,"start2":2142,"length1":16,"length2":17},{"diffs":[[0," albums "],[-1,"\t\t\t\t\t"],[1,"                 "],[0,"= result"]],"start1":2509,"start2":2509,"length1":21,"length2":33},{"diffs":[[0,"dythere "],[-1,"\t\t"],[1,"     "],[0,"= [],\n\t\t"]],"start1":2563,"start2":2563,"length1":18,"length2":21},{"diffs":[[0,"ar name "],[-1,"\t\t"],[1,"       "],[0,"= $(v).d"]],"start1":2748,"start2":2748,"length1":18,"length2":23},{"diffs":[[0,"r name  "],[-1,"\t\t"],[1,"      "],[0,"= album."]],"start1":3129,"start2":3129,"length1":18,"length2":22},{"diffs":[[0,"Of(\"(\"))"],[-1,";\n\t\t\t\t\t\t\tvar"],[1,",\n                               "],[0," include"]],"start1":3276,"start2":3276,"length1":28,"length2":49},{"diffs":[[0,"ncluded "],[1,"   "],[0,"= _.cont"]],"start1":3319,"start2":3319,"length1":16,"length2":19},{"diffs":[[0,"onId) =="],[1,"="],[0," false) "]],"start1":3452,"start2":3452,"length1":16,"length2":17},{"diffs":[[0,"ength =="],[-1,""],[0,""],[1,"="],[0," 0) {\n\t\t"]],"start1":3604,"start2":3604,"length1":16,"length2":17},{"diffs":[[0,"everse()"],[-1,""],[0,""],[1,";"],[0,"\n\t\t\t\t\t\t/"]],"start1":3865,"start2":3865,"length1":16,"length2":17},{"diffs":[[0,"nt,\n"],[-1,"\t\t\t\t\t\t\t\t \tname: album.collectionName, \n\t\t\t\t\t\t\t\t \t/*\n\t\t\t\t\t\t\t\t\t\tYear is the first 4 numbers form the release date.\n\t\t\t\t\t\t\t\t \t*/\n\t\t\t\t\t\t\t\t \trelease: helpers.parseyear(album.releaseDate), \n\t\t\t\t\t\t\t\t \timage: album.artworkUrl100,\n\t\t\t\t\t\t\t\t \tartist: album.artistName, \n\t\t\t\t\t\t\t\t \tartistid: album.artistId,\n\t\t\t\t\t\t\t\t \tid: album.collectionId,\n\t\t\t\t\t\t\t\t \t"],[1,"                                    name: album.collectionName, \n                                    /*\n\t\t\t\t\t\t\t\t\t\tYear is the first 4 numbers form the release date.\n                                    */\n                                    release: helpers.parseyear(album.releaseDate),\n                                    image: album.artworkUrl100,\n                                    artist: album.artistName,\n                                    artistid: album.artistId,\n                                    id: album.collectionId,\n                                    "],[0,"expl"]],"start1":4238,"start2":4238,"length1":347,"length2":579},{"diffs":[[0,": false\n"],[-1,"\t\t\t\t\t\t\t\t"],[1,"                               "],[0," }},\n\t\t\t"]],"start1":4873,"start2":4873,"length1":24,"length2":47}]],"length":7984,"saved":false}
{"ts":1360001547620,"patch":[[{"diffs":[[0,";\n\t\t\t\t\t\t"],[-1,"function"],[1,"var"],[0," buildAl"]],"start1":4048,"start2":4048,"length1":24,"length2":19},{"diffs":[[0,"ildAlbum"],[1," = function"],[0,"() {\n\t\t\t"]],"start1":4062,"start2":4062,"length1":16,"length2":27},{"diffs":[[0,"buildAlbum()"],[1,";"],[0,"\n\t\t\t\t\t\t\t\t\t}\n"]],"start1":5142,"start2":5142,"length1":24,"length2":25},{"diffs":[[0,"oading()"],[1,";"],[0,"\n\t\t\t\t\t\t\t"]],"start1":5210,"start2":5210,"length1":16,"length2":17},{"diffs":[[0,"\t\t\t\t\t}\n\t\t\t\t\t\t\t})"],[1,";"],[0,"\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/"]],"start1":5235,"start2":5235,"length1":32,"length2":33},{"diffs":[[0,"/\n\t\t\t\t\t\t"],[-1,"function"],[1,"var"],[0," onAlbum"]],"start1":5504,"start2":5504,"length1":24,"length2":19},{"diffs":[[0,"dLoading"],[1,"  = function"],[0,"() {\n\t\t\t"]],"start1":5531,"start2":5531,"length1":16,"length2":28}]],"length":8000,"saved":false}
{"ts":1360001717972,"patch":[[{"diffs":[[0,"umlist);\n\t\t\t\t\t\t}"],[-1,""],[0,""],[1,";"],[0,"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t"]],"start1":5798,"start2":5798,"length1":32,"length2":33},{"diffs":[[0,"\t\t\t}\n\t\t\t\t}\n\t\t\t})"],[-1,""],[0,""],[1,";"],[0,"\n\t\t}\n\t},\n\ttrackl"]],"start1":5818,"start2":5818,"length1":32,"length2":33},{"diffs":[[0,"lbumlist) {\n"],[-1,"\t\t\t"],[1,"            "],[0,"var albums \t"]],"start1":5880,"start2":5880,"length1":27,"length2":36},{"diffs":[[0," albums "],[-1,"\t"],[1,"  "],[0,"   = $(a"]],"start1":5907,"start2":5907,"length1":17,"length2":18},{"diffs":[[0,"umcount "],[1," "],[0,"= albums"]],"start1":5970,"start2":5970,"length1":16,"length2":17},{"diffs":[[0,"        "],[1," "],[0,"= 0"],[1,";"],[0,"\n\t\t\t/*\n\t"]],"start1":6003,"start2":6003,"length1":19,"length2":21},{"diffs":[[0,"sults !="],[1,"="],[0," undefin"]],"start1":6383,"start2":6383,"length1":16,"length2":17},{"diffs":[[0,"\tvar"],[-1," albuminfo = results.splice(0,1),\n\t\t\t\t\t\t\t"],[0,"\tdis"]],"start1":6434,"start2":6434,"length1":49,"length2":8},{"diffs":[[0," tracks = []"],[-1,""],[0,""],[1,";"],[0,"\n\t\t\t\t\t\t\tfor "]],"start1":6541,"start2":6541,"length1":24,"length2":25},{"diffs":[[0,"[i] = []"],[1,";"],[0,"\n\t\t\t\t\t\t\t"]],"start1":6606,"start2":6606,"length1":16,"length2":17},{"diffs":[[0,"[];\n\t\t\t\t\t\t\t}"],[-1,";"],[0,"\n\t\t\t\t\t\t\t/*\n\t"]],"start1":6612,"start2":6612,"length1":25,"length2":24},{"diffs":[[0,"seDate\n\t\t\t\t\t\t\t\t}"],[1,";"],[0,"\n\t\t\t\t\t\t\t\ttracks["]],"start1":7361,"start2":7361,"length1":32,"length2":33},{"diffs":[[0,"h(remap)"],[1,";"],[0,"\n\t\t\t\t\t\t\t"]],"start1":7417,"start2":7417,"length1":16,"length2":17},{"diffs":[[0,"(album))"],[1,";"],[0,"\n\t\t\t\t\t\t\t"]],"start1":7605,"start2":7605,"length1":16,"length2":17},{"diffs":[[0,"element)"],[1,";"],[0,"\n\t\t\t\t\t\t\t"]],"start1":7667,"start2":7667,"length1":16,"length2":17},{"diffs":[[0,"m(album)"],[1,";"],[0,"\n\t\t\t\t\t\t\t"]],"start1":7711,"start2":7711,"length1":16,"length2":17},{"diffs":[[0,"\t}\n\t\t\t\t\t\t\t})"],[1,";"],[0,"\n\t\t\t\t\t\t}\n\t\t\t"]],"start1":7728,"start2":7728,"length1":24,"length2":25},{"diffs":[[0,"Tracks()"],[1,";"],[0,"\n\t\t\t\t\t\t}"]],"start1":7835,"start2":7835,"length1":16,"length2":17},{"diffs":[[0,"}\n\t\t\t\t})"],[1,";"],[0,"\n\t\t\t}\n\t\t"]],"start1":7858,"start2":7858,"length1":16,"length2":17},{"diffs":[[0,"Tracks()"],[1,";"],[0,"\n\t\t}\n\t}\n"]],"start1":7880,"start2":7880,"length1":16,"length2":17},{"diffs":[[0,"\t\t}\n\t}\n}"],[-1,""],[0,""],[1,";"],[0,"\ntrackli"]],"start1":7890,"start2":7890,"length1":16,"length2":17},{"diffs":[[0,"(list);\n\t}\n}"],[-1,""],[0,""],[1,";"]],"start1":7974,"start2":7974,"length1":12,"length2":13}]],"length":7987,"saved":false}
{"ts":1360002278173,"patch":[[{"diffs":[[0,"\t}\n\t},\n\t"],[-1,"charts"],[1,"album"],[0,": {\n\t\tlo"]],"start1":646,"start2":646,"length1":22,"length2":21},{"diffs":[[0,"\tload: function("],[1,"id"],[0,") {\n\t\t\t$.ajax({\n"]],"start1":664,"start2":664,"length1":32,"length2":34},{"diffs":[[0,"api/"],[-1,"charts\""],[1,"album/\" + id"],[0,",\n\t\t"]],"start1":709,"start2":709,"length1":15,"length2":20},{"diffs":[[0,"raw(404)"],[1,";"],[0,"\n\t\t\t\t}\n\t"]],"start1":960,"start2":960,"length1":16,"length2":17},{"diffs":[[0,"\t},\n"],[-1,"\talbum: {\n\t\tload: function(id"],[1,"    track: {\n        load: function(id) {\n            $.ajax({\n                url: \"/api/track/\" + id,\n                dataType: \"html\",\n                success: function(data) {\n                    var view = $(\"#view\");\n                    view.html(data);\n                    views.loadingindicator.hide();\n                },\n                error: function() {\n                    errors.draw(404);\n                }\n            });\n        }\n    },\n    charts: {\n        load: function("],[0,") {\n"]],"start1":986,"start2":986,"length1":37,"length2":500},{"diffs":[[0,"\turl: \"/api/"],[-1,"album/\" + id"],[1,"charts\""],[0,",\n\t\t\t\tdataTy"]],"start1":1501,"start2":1501,"length1":36,"length2":31},{"diffs":[[0,"errors.draw(404)"],[-1,";"],[0,""],[1,""],[0,"\n\t\t\t\t}\n\t\t\t})\n\t\t}"]],"start1":1747,"start2":1747,"length1":33,"length2":32},{"diffs":[[0,"function"],[1," "],[0,"(list) {"]],"start1":8389,"start2":8389,"length1":16,"length2":17}]],"length":8452,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360078155800,"patch":[[{"diffs":[[0,"ta) {\n\t\t\t\t\t\tvar "],[1,"albuminfo = data.results.splice(0,1),\n\t\t\t\t\t\t\t"],[0,"results = data.r"]],"start1":6795,"start2":6795,"length1":32,"length2":77},{"diffs":[[0,"data.results"],[-1,";"],[0,"\n\t\t\t\t\t\tif (r"]],"start1":6866,"start2":6866,"length1":25,"length2":24},{"diffs":[[0,"\n\t\t\t\t\t\t\t\t};\n"],[1,"\t\t\t\t\t\t\t\tconsole.log(tracks, track.discNumber, track);\n"],[0,"\t\t\t\t\t\t\t\ttrac"]],"start1":7875,"start2":7875,"length1":24,"length2":78},{"diffs":[[0,"t(list);\n\t}\n"],[-1,""],[0,"};"],[1,"\nregistration = {\n    facebook: {\n        load: function() {\n            $.ajax({\n                url:        '/api/registration',\n                dataType:   'html',\n                success:    function(data) {\n                    var view = $('#view');\n                    view.html(data);\n                    views.loadingindicator.hide();\n                }\n            })\n        }\n    }\n}"]],"start1":8536,"start2":8536,"length1":14,"length2":407}]],"length":8943,"saved":false}
{"ts":1360078165656,"patch":[[{"diffs":[[0,"               }"],[1,",\n                error: errors.draw(404);"],[0,"\n            })\n"]],"start1":8894,"start2":8894,"length1":32,"length2":74}]],"length":8985,"saved":false}
{"ts":1360078180767,"patch":[[{"diffs":[[0," error: "],[-1,"errors.draw(404);"],[1,"function() {\n                    errors.draw(404);\n                }"],[0,"\n       "]],"start1":8927,"start2":8927,"length1":33,"length2":84}]],"length":9036,"saved":false}
{"ts":1360078213998,"patch":[[{"diffs":[[0,"04);\n\t\t\t\t}\n\t\t\t})"],[1,";"],[0,"\n\t\t}\n\t},\n\tloadin"]],"start1":2037,"start2":2037,"length1":32,"length2":33},{"diffs":[[0,"\t\t}\n\t}\n}"],[1,";"],[0,"\nalbum ="]],"start1":2157,"start2":2157,"length1":16,"length2":17},{"diffs":[[0,"      })"],[1,";"],[0,"\n       "]],"start1":9012,"start2":9012,"length1":16,"length2":17},{"diffs":[[0,"\n    }\n}"],[1,";"]],"start1":9031,"start2":9031,"length1":8,"length2":9}]],"length":9040,"saved":false}
