{"ts":1359982432866,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n\tLoad dependencies. \n\t-FS is used for template fetching.\n*/\nvar fs = require('fs'),\n\tdb = require('../db/queries')\n/*\n\tSpecifies the parent directory path in a string.\n*/\nvar dirup = __dirname.substr(0, __dirname.length - 7);\n\nthis.connection = function (socket) {\n\t\tsocket.emit('connected', {\"message\": \"You are now connected to the socket.io server.\"});\n\t\t/*\n\t\t\tSend a confirmation for a successful connect to a user.\n\t\t\tThis is triggered on every site visit.\n\t\t*/\n\t\tsocket.on('load-template', function (data) {\n\t\t\t/*\n\t\t\t\tTemplates are HTML strings with place holders that are used on the client-side and on the server-side.\n\t\t\t\tThis automates the process of keeping both versions up to date.\n\t\t\t*/\n\t\t\tvar templatename = data.name,\n\t\t\t\tfilename     = dirup + '/sites/' + templatename + \".html\"\n\t\t\t/*\n\t\t\t\tRead the template, get it from the file system. For example: templatename is \"album\". Get /sites/album.html\n\t\t\t*/\n\t\t\tfs.readFile(filename, \"utf-8\", function (err, data) {\n\t\t\t\t/*\n\t\t\t\t\tError handling if somebody tries to send a malicious request via console.\n\t\t\t\t*/\n\t\t\t\tif (err) {\n\t\t\t\t\tsocket.emit('error', \t{'message': 'The file path does not exist.'})\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsocket.emit('template', {'template': data});\n\t\t\t\t}\n\t\t\t})   \n\t\t});\n\t\tsocket.on('new-track', function (data) {\n\t\t\tvar track = data;\n\t\t\t/*\n\t\t\t\tAdd a element where we can store the play count.\n\t\t\t*/\n\t\t\ttrack[\"listens\"] = 0;\n\t\t\tdb.addTrack(track, function() {\n\t\t\t\tconsole.log(\"Track added successfully.\");\n\t\t\t})\n\t\t})\n\t\tsocket.on('new-album', function (data) {\n\t\t\tvar album = data;\n\t\t\tdb.addAlbum(album, function() {\n\t\t\t\tconsole.log(\"Album added successfully.\")\n\t\t\t})\n\t\t})\n}"]],"start1":0,"start2":0,"length1":0,"length2":1651}]],"length":1651}
{"contributors":[],"silentsave":false,"ts":1359983100955,"patch":[[{"diffs":[[0,"ueries')"],[1,";"],[0,"\n"],[-1,""],[0,"/*\n\tSpec"]],"start1":109,"start2":109,"length1":17,"length2":18},{"diffs":[[0," \".html\""],[1,";"],[0,"\n\t\t\t/*\n\t"]],"start1":791,"start2":791,"length1":16,"length2":17},{"diffs":[[0,"error', "],[-1,"\t"],[1,"   "],[0,"{'messag"]],"start1":1108,"start2":1108,"length1":17,"length2":19},{"diffs":[[0,"xist.'})"],[1,";"],[0,"\n\t\t\t\t}\n\t"]],"start1":1156,"start2":1156,"length1":16,"length2":17},{"diffs":[[0,"\t}\n\t\t\t})"],[1,";"],[0,"   \n\t\t})"]],"start1":1236,"start2":1236,"length1":16,"length2":17},{"diffs":[[0,"rack"],[-1,"[\""],[1,"."],[0,"listens"],[-1,"\"]"],[0," = 0"]],"start1":1388,"start2":1388,"length1":19,"length2":16},{"diffs":[[0,");\n\t\t\t})"],[1,";"],[0,"\n\t\t})"],[1,";"],[0,"\n\t\tsocke"]],"start1":1484,"start2":1484,"length1":21,"length2":23},{"diffs":[[0,"y.\")"],[1,";"],[0,"\n\t\t\t})"],[1,";"],[0,"\n\t\t})"],[1,";"],[0,"\n}"],[1,";"]],"start1":1639,"start2":1639,"length1":17,"length2":21}]],"length":1660,"saved":false}
